input {
	file {
		path => [ "d:/download/vmlog/vmlog.txt" ] 
		start_position => beginning
		 }
	file {
		path => [ "d:/download/hostlog/hostlog.txt" ]
		start_position => beginning
		 }
	  }
	 
filter {
	if [path] == "d:/download/hostlog/hostlog.txt" {
			grok {
					match => [ "message", "%{USERNAME:host_name} %{GREEDYDATA:time_stamp} %{NUMBER:active_memory} %{NUMBER:shared_memory} %{NUMBER:ballooned_memory} %{NUMBER:memory_swap_in_rate} %{NUMBER:memory_swap_out_rate} %{NUMBER:disk_highest_latency} %{NUMBER:disk_max_depth_queue} %{NUMBER:cpu_usage_mhz} %{NUMBER:memory_usage_percentage} %{NUMBER:disk_read_rate_percentage} %{NUMBER:disk_write_rate_percentage} %{NUMBER:disk_read_request_number} %{NUMBER:disk_write_request_number} %{NUMBER:data_received_rate} %{NUMBER:data_transmitted_rate} %{NUMBER:packets_received} %{NUMBER:packets_tranmitted} %{NUMBER:p1} %{NUMBER:p2}" ]
				 }
	   }
	else {
			grok {
					match => [ "message", "%{USERNAME:vm_name} %{GREEDYDATA:time_stamp} %{NUMBER:cpu_usage_percentage} %{NUMBER:cpu_ready_percentage} %{NUMBER:active_memory} %{NUMBER:shared_memory} %{NUMBER:swapped_memory} %{NUMBER:baloon_memory} %{NUMBER:memory_swap_in_rate} %{NUMBER:memory_swap_out_rate} %{NUMBER:cpu_usage_mhz} %{NUMBER:memory_usage_percentage} %{NUMBER:read_rate_data_from_vd} %{NUMBER:write_rate_data_to_vd} %{NUMBER:avg_read_per_sec_vd} %{NUMBER:avg_write_per_sec_vd} %{NUMBER:network_utilization} %{NUMBER:packets_received} %{NUMBER:packets_transmitted}" ]
				 }
	     }
	   }
	   

output {
	mongodb {
    collection => "logcollection"
    database => "db8"
    uri => "mongodb://localhost:27017/"
			}
	    }
		
 		
